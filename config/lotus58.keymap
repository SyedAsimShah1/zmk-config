/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_dsklg {
            timeout-ms = <100>;
            key-positions = <24 52>;
            layers = <0>;
            bindings = <&kp LGUI>;
        };
    };

    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };

        fofunc: four_ffour {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N4>, <&kp F4>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        sleft: s_left {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp S>, <&kp LEFT>;

            mods = <(MOD_LGUI|MOD_RGUI)>;
        };

        fright: f_right {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp F>, <&kp RIGHT>;

            mods = <(MOD_LGUI|MOD_RGUI)>;
        };

        lh_pht: left_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        ht_layer: ht_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;

            label = "HT_LAYER";
        };
    };

    macros {
        switch_buffer: s_buffer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(NUMBER_6)>;
            label = "S_BUFFER";
        };

        s_window: s_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp N>;
            label = "S_WINDOW";
        };

        s_session: s_session {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp LS(L)>;
            label = "S_SESSION";
        };

        back_dir: back_dir {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp DOT &kp SLASH>;
            label = "BACK_DIR";
        };

        s_projects: s_projects {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp W>;
            label = "S_PROJECTS";
        };

        close_buffer: c_close {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp COLON &kp Q &kp ENTER>;
            label = "C_CLOSE";
        };

        save_buffer: save_buffer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp COLON &kp W &kp ENTER>;
            label = "SAVE_BUFFER";
        };

        c_buffers_except1: c_buffers_except1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp COLON &kp PERCENT &kp B &kp D &kp PIPE &kp E &kp HASH &kp PIPE &kp B &kp D &kp HASH &kp ENTER>;
            label = "C_BUFFERS_EXCEPT1";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            //   ------------------------------------------------------------------------------------------------------------
            //  0|  ESC  |  1  |  2  |  3   |  4   |  5   |                     |  6   |  7    |  8    |  9   |   0   |   =   | 11
            // 12|  TAB  |  Q  |  W  |  E   |  R   |  T   |                     |  Y   |  U    |  I    |  O   |   P   |   [   | 23
            // 24|  CTRL |  A  |  S  |  D   |  F   |  G   |  RESET  |  | RESET  |  H   |  J    |  K    |  L   |   ;   | ' SFT | 37
            // 38|  SFT  |  Z  |  X  |  C   |  V   |  B   |  MUTE   |  | PLAY   |  N   |  M    |  ,    |  .   |   /   | \ CTRL| 51
            // 52                    |ENT RS|  ALT | SPACE|DELETE LW|  |ENTER RS| BSPC |  ] LW | RGUI  |                        59

            bindings = <
&kp ESC           &kp N1  &kp N2  &kp N3        &fofunc       &kp N5                                                &kp N6                 &kp N7     &kp N8         &kp N9   &kp N0    &kp EQUAL
&kp TAB           &kp Q   &kp W   &kp E         &kp R         &kp T                                                 &kp Y                  &kp U      &kp I          &kp O    &kp P     &s_session
&ht LCTRL ESCAPE  &kp A   &sleft  &kp D         &fright       &kp G            &kp C_MUTE          &sys_reset       &kp H                  &kp J      &kp K          &kp L    &kp SEMI  &mt LCTRL SQT
&kp LSHFT         &kp Z   &kp X   &kp C         &kp V         &kp B            &c_buffers_except1  &close_buffer    &kp N                  &kp M      &kp COMMA      &kp DOT  &kp FSLH  &mt RSHFT BSLH
                                  &kp LEFT_GUI  &kp LEFT_ALT  &ht_layer 3 DEL  &ht_layer 4 SPACE   &ht_layer 3 RET  &ht_layer 4 BACKSPACE  &kp UNDER  &kp RIGHT_GUI
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | `     |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |       |  !  | HOME|   ^  |  END |  %   |                   | VOL^ |  PGUP |  INS  |  ^   |  PSCR |   -   |
            // |       |  #  |  <- |   v  | ->   |  $   |        |  |       | VOLv |    <- |   ^   |  ->  |   ~   |   _   |
            // |       |  @  |  -  |  (   |  )   |  &   |        |  |       | MUTE |  PGDN |   v   |  :   |   *   |   |   |
            //                     |  F11 |      |      |        |  |       |      |       |  F12  |

            bindings = <
&kp GRAVE  &kp F1    &kp F2     &kp F3    &kp F4     &kp F5                          &kp F6        &kp F7     &kp F8    &kp F9     &kp F10    &kp PLUS
&trans     &kp EXCL  &kp HOME   &kp UP    &kp END    &kp PRCNT                       &kp C_VOL_UP  &kp PG_UP  &kp INS   &kp CARET  &kp PSCRN  &kp MINUS
&trans     &kp HASH  &kp LEFT   &kp DOWN  &kp RIGHT  &kp DLLR   &bootloader  &trans  &kp C_VOL_DN  &kp LEFT   &kp UP    &kp RIGHT  &kp TILDE  &kp UNDER
&trans     &kp AT    &kp MINUS  &kp LBRC  &kp RBRC   &kp AMPS   &trans       &trans  &kp C_MUTE    &kp PG_DN  &kp DOWN  &kp COLON  &kp STAR   &kp PIPE
                                &kp F11   &trans     &trans     &trans       &trans  &trans        &trans     &kp F12
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_NEXT C_PREV>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |OUTTOG|OUTUSB| OUTBT |      | RESET | FLASH |
            // |     | INS  | PSCR | GUI   | RESET |      |                | PGUP |      |   ^   |      |       |       |
            // |     | ALT  | CTRL | SHIFT | FLASH | CAPS |      |  |      | PGDN |   <- |   v   |  ->  |  DEL  | BSPC  |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |  |>  |  <|<| | |>|> |       |       |
            //                     |       |       |      |      |  |      |      |      |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &out OUT_TOG  &out OUT_USB  &out OUT_BLE  &trans      &sys_reset  &bootloader
&trans      &kp INS       &kp PSCRN     &kp K_CMENU   &sys_reset    &trans                        &kp PG_UP     &trans        &kp UP        &trans      &trans      &trans
&trans      &kp LALT      &kp LCTRL     &kp LSHFT     &bootloader   &kp CLCK      &trans  &trans  &kp PG_DN     &kp LEFT      &kp DOWN      &kp RIGHT   &kp DEL     &kp BSPC
&trans      &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans        &trans  &trans  &trans        &kp C_PP      &kp C_PREV    &kp C_NEXT  &trans      &trans
                                        &trans        &trans        &trans        &trans  &trans  &trans        &trans        &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        SymbolL_NavNumR {
            bindings = <
&trans  &kp F1            &kp F2         &kp F3            &kp F4             &kp F5                          &kp C_REWIND  &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT    &kp C_FAST_FORWARD  &trans
&trans  &kp SINGLE_QUOTE  &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES  &kp DOT                         &kp STAR      &kp N7        &kp N8            &kp N9        &kp PLUS            &trans
&trans  &kp EXCL          &kp MINUS      &kp PLUS          &kp EQUAL          &kp HASH   &bootloader  &trans  &kp COLON     &kp NUMBER_4  &kp N5            &kp NUMBER_6  &kp PERCENT         &trans
&trans  &kp CARET         &kp SLASH      &kp STAR          &kp BACKSLASH      &back_dir  &trans       &trans  &kp SLASH     &kp NUMBER_1  &kp NUMBER_2      &kp NUMBER_3  &kp MINUS           &trans
                                         &kp F11           &trans             &trans     &trans       &trans  &trans        &kp N0        &kp DOT
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_NEXT C_PREV>;
        };

        SymbolR_NavNumL {
            bindings = <
&trans      &kp F1       &kp F2          &kp F3          &kp F4       &kp F5                        &kp F6         &kp F7      &kp F8                &kp F8                 &kp F10       &bootloader
&trans      &kp PAGE_UP  &switch_buffer  &kp UP_ARROW    &s_window    &kp PAGE_UP                   &kp AMPERSAND  &kp GRAVE   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT   &trans
&caps_word  &kp HOME     &kp LEFT        &kp DOWN_ARROW  &kp RIGHT    &kp END       &trans  &trans  &kp PIPE       &kp COLON   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION  &trans
&trans      &trans       &kp K_CUT       &kp K_COPY      &kp K_PASTE  &save_buffer  &trans  &trans  &kp TILDE      &kp DOLLAR  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT        &trans
                                         &trans          &trans       &trans        &trans  &trans  &trans         &trans      &kp F12
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };
    };
};
